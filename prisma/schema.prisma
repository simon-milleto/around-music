// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// generator client {
//   provider = "prisma-client-js"
//   previewFeatures = ["referentialIntegrity"]
// }
// datasource db {
//   provider = "mysql"
//   url = env("DATABASE_URL")
//   referentialIntegrity = "prisma"
// }

model User {
  id        Int    @id @default(autoincrement())
  name      String
  email     String @unique
  spotifyId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  currentTrack CurrentTrack?
  geolocation  Geolocation?
}

model Geolocation {
  id        Int   @id @default(autoincrement())
  User      User  @relation(fields: [userId], references: [id])
  userId    Int   @unique
  latitude  Float
  longitude Float
}

model Track {
  id          Int     @id @default(autoincrement())
  spotifyId   String  @unique
  name        String
  image       String?
  description String?
  link        String?
  previewUrl  String?

  Album         Album          @relation(fields: [albumId], references: [id])
  albumId       Int
  currentTracks CurrentTrack[]
  artists       Artist[]
}

model CurrentTrack {
  id      Int   @id @default(autoincrement())
  Track   Track @relation(fields: [trackId], references: [id])
  trackId Int
  User    User  @relation(fields: [userId], references: [id])
  userId  Int   @unique
}

model Album {
  id        Int    @id @default(autoincrement())
  spotifyId String @unique

  name  String
  image String
  link  String?

  artists Artist[]
  tracks  Track[]
}

model Artist {
  id        Int    @id @default(autoincrement())
  spotifyId String @unique

  name        String
  image       String?
  description String?
  link        String?
  genres      Genre[]

  albums  Album[]
  tracks  Track[]
}

model Genre {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  artists Artist[]
}
